"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var _scrollbarSize = _interopRequireDefault(require("dom-helpers/scrollbarSize"));

var _react = _interopRequireDefault(require("react"));

var dates = _interopRequireWildcard(require("./utils/dates"));

var _DateContentRow = _interopRequireDefault(require("./DateContentRow"));

var _Header = _interopRequireDefault(require("./Header"));

var _ResourceHeader = _interopRequireDefault(require("./ResourceHeader"));

var _helpers = require("./utils/helpers");

var TimeGridHeader =
/*#__PURE__*/
function (_React$Component) {
  (0, _inheritsLoose2.default)(TimeGridHeader, _React$Component);

  function TimeGridHeader() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.handleHeaderClick = function (date, view, e) {
      e.preventDefault();
      (0, _helpers.notify)(_this.props.onDrillDown, [date, view]);
    };

    _this.renderRow = function (resource) {
      var _this$props = _this.props,
          events = _this$props.events,
          rtl = _this$props.rtl,
          selectable = _this$props.selectable,
          getNow = _this$props.getNow,
          range = _this$props.range,
          getters = _this$props.getters,
          localizer = _this$props.localizer,
          accessors = _this$props.accessors,
          components = _this$props.components,
          resizable = _this$props.resizable;
      var resourceId = accessors.resourceId(resource);
      var eventsToDisplay = resource ? events.filter(function (event) {
        return accessors.resource(event) === resourceId;
      }) : events;
      return _react.default.createElement(_DateContentRow.default, {
        isAllDay: true,
        rtl: rtl,
        getNow: getNow,
        minRows: 2,
        range: range,
        events: eventsToDisplay,
        resourceId: resourceId,
        className: "rbc-allday-cell",
        selectable: selectable,
        selected: _this.props.selected,
        components: components,
        accessors: accessors,
        getters: getters,
        localizer: localizer,
        onSelect: _this.props.onSelectEvent,
        onDoubleClick: _this.props.onDoubleClickEvent,
        onKeyPress: _this.props.onKeyPressEvent,
        onSelectSlot: _this.props.onSelectSlot,
        longPressThreshold: _this.props.longPressThreshold,
        resizable: resizable
      });
    };

    return _this;
  }

  var _proto = TimeGridHeader.prototype;

  _proto.renderHeaderCell = function renderHeaderCell(date, idx) {
    var _this2 = this;

    var _this$props2 = this.props,
        localizer = _this$props2.localizer,
        getDrilldownView = _this$props2.getDrilldownView,
        getNow = _this$props2.getNow,
        dayProp = _this$props2.getters.dayProp,
        _this$props2$componen = _this$props2.components.header,
        HeaderComponent = _this$props2$componen === void 0 ? _Header.default : _this$props2$componen;
    var today = getNow();
    var drilldownView = getDrilldownView(date);
    var label = localizer.format(date, 'dayFormat');

    var _dayProp = dayProp(date),
        className = _dayProp.className,
        style = _dayProp.style;

    var header = _react.default.createElement(HeaderComponent, {
      date: date,
      label: label,
      localizer: localizer
    });

    return _react.default.createElement("div", {
      key: idx,
      style: style,
      className: (0, _clsx.default)('rbc-header', className, dates.eq(date, today, 'day') && 'rbc-today')
    }, drilldownView ? _react.default.createElement("a", {
      href: "#",
      onClick: function onClick(e) {
        return _this2.handleHeaderClick(date, drilldownView, e);
      }
    }, header) : _react.default.createElement("span", null, header));
  };

  _proto.renderHeaderCells = function renderHeaderCells(range) {
    var _this3 = this;

    return range.map(function (date, i) {
      return _this3.renderHeaderCell(date, i);
    });
  };

  _proto.render = function render() {
    var _this4 = this;

    var _this$props3 = this.props,
        width = _this$props3.width,
        rtl = _this$props3.rtl,
        resources = _this$props3.resources,
        range = _this$props3.range,
        accessors = _this$props3.accessors,
        scrollRef = _this$props3.scrollRef,
        isOverflowing = _this$props3.isOverflowing,
        _this$props3$componen = _this$props3.components,
        TimeGutterHeader = _this$props3$componen.timeGutterHeader,
        _this$props3$componen2 = _this$props3$componen.resourceHeader,
        ResourceHeaderComponent = _this$props3$componen2 === void 0 ? _ResourceHeader.default : _this$props3$componen2;
    var style = {};

    if (isOverflowing) {
      style[rtl ? 'marginLeft' : 'marginRight'] = (0, _scrollbarSize.default)() + "px";
    }

    var resourcesPlain = resources.map(function (_ref) {
      var id = _ref[0],
          resource = _ref[1];
      return {
        id: id,
        resource: resource
      };
    });
    return _react.default.createElement("div", {
      style: style,
      ref: scrollRef,
      className: (0, _clsx.default)('rbc-time-header', isOverflowing && 'rbc-overflowing')
    }, _react.default.createElement("div", {
      className: "rbc-label rbc-time-header-gutter",
      style: {
        width: width,
        minWidth: width,
        maxWidth: width
      }
    }, TimeGutterHeader && _react.default.createElement(TimeGutterHeader, null)), range.map(function (date, ii) {
      return _react.default.createElement("div", {
        style: {
          flexGrow: resourcesPlain.filter(function (_ref2) {
            var resource = _ref2.resource;
            return (resource.workingDays || [date.getDay()]).includes(date.getDay());
          }).length
        },
        className: "rbc-time-header-content",
        key: ii
      }, _react.default.createElement("div", {
        className: "rbc-row rbc-row-resource",
        key: "resource_" + ii
      }, _this4.renderHeaderCell(date, ii)), _react.default.createElement("div", {
        className: "rbc-row rbc-time-header-cell"
      }, resources.map(function (_ref3, idx) {
        var id = _ref3[0],
            resource = _ref3[1];
        return resource && (resource.workingDays || [date.getDay()]).includes(date.getDay()) && _react.default.createElement("div", {
          key: id,
          className: "rbc-header"
        }, _react.default.createElement(ResourceHeaderComponent, {
          index: idx,
          label: accessors.resourceTitle(resource),
          resource: resource
        }));
      })));
    }));
  };

  return TimeGridHeader;
}(_react.default.Component);

TimeGridHeader.propTypes = process.env.NODE_ENV !== "production" ? {
  range: _propTypes.default.array.isRequired,
  events: _propTypes.default.array.isRequired,
  resources: _propTypes.default.object,
  getNow: _propTypes.default.func.isRequired,
  isOverflowing: _propTypes.default.bool,
  rtl: _propTypes.default.bool,
  resizable: _propTypes.default.bool,
  width: _propTypes.default.number,
  localizer: _propTypes.default.object.isRequired,
  accessors: _propTypes.default.object.isRequired,
  components: _propTypes.default.object.isRequired,
  getters: _propTypes.default.object.isRequired,
  selected: _propTypes.default.object,
  selectable: _propTypes.default.oneOf([true, false, 'ignoreEvents']),
  longPressThreshold: _propTypes.default.number,
  onSelectSlot: _propTypes.default.func,
  onSelectEvent: _propTypes.default.func,
  onDoubleClickEvent: _propTypes.default.func,
  onKeyPressEvent: _propTypes.default.func,
  onDrillDown: _propTypes.default.func,
  getDrilldownView: _propTypes.default.func.isRequired,
  scrollRef: _propTypes.default.any
} : {};
var _default = TimeGridHeader;
exports.default = _default;
module.exports = exports["default"];